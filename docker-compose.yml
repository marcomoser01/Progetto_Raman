version: "3"
# file di configurazione di Docker Compose utilizzato per definire e gestire i container Docker
networks: # Definisce le reti Docker che saranno utilizzate dai servizi.
  my_network: # rete utilizzata per connettere i container dei servizi.

services: #i diversi servizi/containe
  mysql:
    container_name: mysql
    # Specifica l'immagine di MySQL da utilizzare
    image: mysql:latest
    # Configura variabili d'ambiente per il container. password porta 
    environment:
      MYSQL_ROOT_PASSWORD: Root
      # internal_port:external_port
    ports:
      - 3306:3306
      # a quale rete il container deve essere connesso.
    networks:
      - my_network

  zipkin:
    container_name: zipkin
    # Specifica l'immagine di Zipkin da utilizzare
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    networks:
      - my_network
# Questa Ã¨ la definizione del servizio Docker 
  config-server:
  # Imposta il nome del container
    container_name: config-server
    # Specifica come costruire l'immagine del container
    build:
    # Indica la directory in cui si trova il contesto di compilazione
      context: ./config-server
      #  Specifica il nome del file Dockerfile da utilizzare per la compilazione dell'immagine.
      dockerfile: Dockerfile
      # attendere prima di avviare questo servizio
    depends_on:
      - mysql
      # internal_port:external_port
    ports:
      - 8888:8888
    networks:
      - my_network
      # se fallisce riavvia
    restart: on-failure

  registry:
    container_name: registry
    build:
      context: ./registry
      dockerfile: Dockerfile
    depends_on:
      - mysql
    ports:
      - 8761:8761
    networks:
      - my_network
    restart: on-failure

  gateway:
    container_name: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    depends_on:
      - config-server
      - zipkin
      - registry
    ports:
      - 9999:9999
    networks:
      - my_network
      # links  uguale a depends on
    links:
      - config-server
      - registry
      - zipkin
      # se fallisce riparte 
    restart: on-failure

  catalog:
    container_name: catalog
    build:
      context: ./catalog
      dockerfile: Dockerfile
    depends_on:
      - config-server
      - zipkin
      - registry
    ports:
      - 8080:8080
    networks:
      - my_network
    links:
      - config-server
      - registry
      - zipkin
    restart: on-failure

  purchase:
    container_name: purchase
    build:
      context: ./purchase
      dockerfile: Dockerfile
    depends_on:
      - config-server
      - zipkin
      - registry
      - catalog
    ports:
      - 8090:8090
    networks:
      - my_network
    links:
      - config-server
      - registry
      - zipkin
      - catalog
    restart: on-failure

  rating:
    container_name: rating
    build:
      context: ./rating
      dockerfile: Dockerfile
    depends_on:
      - config-server
      - zipkin
      - registry
      - catalog
      - user
    ports:
      - 8060:8060
    networks:
      - my_network
    links:
      - config-server
      - registry
      - zipkin
      - user
    restart: on-failure

  user:
    container_name: user
    build:
      context: ./user
      dockerfile: Dockerfile
    depends_on:
      - config-server
      - zipkin
      - registry
      - catalog
    ports:
      - 8070:8070
    networks:
      - my_network
    links:
      - config-server
      - registry
      - zipkin
      - catalog
    restart: on-failure